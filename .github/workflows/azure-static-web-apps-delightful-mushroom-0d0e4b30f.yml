name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    permissions:
      id-token: write
      contents: read

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false

      # Node 20 para compilar Angular sin que intervenga Oryx
      - name: Use Node 20.x
        uses: actions/setup-node@v4
        with:
          node-version: '20.19.0'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build Angular app
        run: npm run build

      # Obtener ID token de GitHub (OIDC) para autenticar con Azure
      - name: Get GitHub ID Token
        uses: actions/github-script@v7
        id: idtoken
        with:
          script: |
            const core = require('@actions/core');
            return await core.getIDToken();
          result-encoding: string

      - name: Upload prebuilt app to Azure Static Web Apps
        uses: Azure/static-web-apps-deploy@v1
        id: swa
        with:
          github_id_token: ${{ steps.idtoken.outputs.result }}
          action: "upload"
          app_location: "/"
          output_location: "dist/online-store/browser"
          skip_app_build: true
          skip_api_build: true

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    permissions:
      id-token: write  # necesario tambi√©n en este job si va a usar OIDC
      contents: read

    steps:
      - name: Get GitHub ID Token
        uses: actions/github-script@v7
        id: idtoken
        with:
          script: |
            const core = require('@actions/core');
            return await core.getIDToken();
          result-encoding: string

      - name: Close Pull Request
        uses: Azure/static-web-apps-deploy@v1
        with:
          github_id_token: ${{ steps.idtoken.outputs.result }}
          action: "close"
